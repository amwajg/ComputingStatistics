na.omit() %>%
count(country) %>%
arrange(desc(n)) %>%
filter(n >=59) %>%
pull(country) %>%
as.list()
#country_list
year_list <-
h %>%
select(year,all_of(fields_strings)) %>%
na.omit() %>%
count(year) %>%
year_list
year_list <-
h %>%
select(year,all_of(fields_strings)) %>%
na.omit() %>%
count(year)
year_list
year_list <-
h %>%
select(year,all_of(fields_strings)) %>%
na.omit() %>%
count(year) %>%
arrange(desc(n))
year_list
scatter_plot <- function(.d,x,y){
.d %>%
na.omit() %>%
ggplot(aes(x=!!rlang::sym(x),
y=!!rlang::sym(y),
color=country))+
geom_point()
}
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(miniUI)
pacman::p_load(shiny, miniUI, tidyverse)
ggplot(aes(x = !!sym(fields_list[1])))+
geom_density()
ggplot(aes(x = !!sym(fields_list[[1]])))+
geom_density()
hh %>%
ggplot(aes(x = !!sym(fields_list[[1]])))+
geom_density()
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(fields_list[1])))+
geom_density()
}
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(fields_list[1])))+
geom_density()
})
}
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Drag to select points"),
miniContentPanel(
plotOutput("plot", height = "100%")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(fields_list[1])))+
geom_density()
})
}
runGadget(ui, server)
}
hh %>% gadget_plot()
hh %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniContentPanel(
plotOutput("plot", height = "100%")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(fields_list[[1]])))+
geom_density()
})
}
runGadget(ui, server)
}
hh %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
fields_list,
selected = fields_list[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL
)
),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%"))
),
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(fields_list[[1]])))+
geom_density()
})
}
runGadget(ui, server)
}
hh %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
fields_list,
selected = fields_list[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL
)
),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%"))
),
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(input$x)))+
geom_density()
})
}
runGadget(ui, server)
}
hh %>% gadget_plot()
h %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
fields_list,
selected = fields_list[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL)
)),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%")
)),
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(input$x)))+
geom_density()
})
}
runGadget(ui, server)
}
h %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
fields_list,
selected = fields_list[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL)
)),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%")
))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
hh %>%
ggplot(aes(x = !!sym(input$x)))+
geom_density()
})
}
runGadget(ui, server)
}
h %>% gadget_plot()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,WDI,Almalki)
outcome_indicators <-
c(
"5.51.01.03.mortal",
"HF.DYN.MORT",
"SH.DYN.MORT",
"UIS.FEP.56.F900",
'NY.ADJ.DMIN.GN.ZS',
'NY.ADJ.DRES.GN.ZS',
'NY.ADJ.DRES.GN.ZS',
'EG.ELC.ACCS.ZS',
'SE.PRM.TENR',
'NY.ADJ.NNTY.KD.ZG',
'NY.ADJ.NNTY.KD',
'NY.ADJ.NNTY.PC.KD.ZG',
'NY.ADJ.NNTY.PC.KD',
'NY.ADJ.DKAP.GN.ZS',
'SP.ADO.TFRT',
'SP.POP.DPND',
'FB.BNK.CAPA.ZS',
'FB.AST.NPER.ZS',
'SP.DYN.CBRT.IN',
'FB.CBK.BRWR.P3',
'FM.LBL.BMNY.CN',
'SH.DTH.COMM.ZS',
'SH.DTH.INJR.ZS',
'SH.DTH.NCOM.ZS',
'AG.PRD.CREL.MT',
'GC.XPN.COMP.ZS',
'FP.CPI.TOTL',
'SH.XPD.CHEX.GD.ZS',
'SP.DYN.CDRT.IN',
'SH.XPD.GHED.GD.ZS',
'SH.XPD.GHED.PC.CD',
'EG.ELC.NGAS.ZS',
'EG.ELC.NUCL.ZS',
'SL.AGR.EMPL.ZS',
'SL.IND.EMPL.ZS',
'SL.SRV.EMPL.ZS',
'SL.EMP.TOTL.SP.FE.NE.ZS',
'SL.EMP.TOTL.SP.MA.ZS',
'GC.XPN.TOTL.GD.ZS',
'NE.CON.TOTL.KD',
'EG.USE.COMM.FO.ZS',
'NY.GDP.MKTP.KD',
'NY.GDP.MKTP.KD.ZG',
'NY.GDP.PCAP.KD',
'NY.GNP.MKTP.KD',
'SE.PRM.GINT.ZS',
'SH.IMM.IDPT',
'SH.IMM.HEPB',
'SH.IMM.MEAS',
'FP.CPI.TOTL.ZG',
'ST.INT.XPND.CD',
'SP.DYN.LE00.FE.IN',
'SP.DYN.LE00.MA.IN',
'SP.DYN.LE00.IN',
'SH.MMR.RISK.ZS',
'SH.MMR.RISK',
'SH.STA.MMRT',
'SH.STA.TRAF.P5',
'SH.DYN.NCOM.ZS',
'SH.DYN.NCOM.FE.ZS',
'SH.DYN.NCOM.MA.ZS',
'SP.DYN.AMRT.FE',
'SP.DYN.AMRT.MA',
'SP.DYN.IMRT.IN',
'SP.DYN.IMRT.FE.IN',
'SP.DYN.IMRT.MA.IN',
'SH.DYN.MORT.FE',
'SH.DYN.MORT.MA'
)
series_description <- map(outcome_indicators,
function(.x) {
WDIsearch(string = paste0("^", .x, "$"),
short = FALSE,
field = 'indicator')
})
names(series_description[[1]])
series_description[[1]][['name']]
series_description
extract_info <- function(.element){
sapply(series_description,function(.x){
.x[[.element]]
}
)
}
names(series_description[[1]])
extract_info('name')
extract_info <- function(.element){
sapply(series_description,function(.x){
.x[[.element]]
}
)
}
#names(series_description[[1]])
extract_info('name')
extract_info <- function(.element){
sapply(series_description,function(.x){
.x[[.element]]
}
)
}
#names(series_description[[1]])
series_labels <- extract_info('name')
extract_info <- function(.element){
sapply(series_description,function(.x){
.x[[.element]]
}
)
}
#names(series_description[[1]])
series_labels <- extract_info('name')
series_values <- extract_info('indicator')
names(h)
which(names(h) == series_values[3])
names(h)
location <- which(names(h) == series_values[3])
series_labels[location]
#names(h)
location <- which(names(h) == series_values[3])
series_labels[location]
#names(h)
location <- which(series_values == series_values[3])
series_labels[location]
extract_info <- function(.element){
sapply(series_description,function(.x){
.x[[.element]]
}
)
}
#names(series_description[[1]])
series_labels <- extract_info('name')
series_values <- extract_info('indicator')
usethis::use_data(series_labels)
usethis::use_data(series_values)
library(Almalki)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(shiny, miniUI, tidyverse)
library(shiny)
library(miniUI)
library(ggplot2)
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
fields_list,
selected = fields_list[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL)
)),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%")
))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
location <- which(series_values == input$x)
x_label <- series_labels[location]
hh %>%
ggplot(aes(x = !!sym(input$x)))+
geom_density() +
labs(x = x_label)
})
}
runGadget(ui, server)
}
h %>% gadget_plot()
gadget_plot <-  function(hh) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
series_labels,
selected = series_labels[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL)
)),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%")
))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
location <- which(series_labels == input$x)
x_value <- series_values[location]
hh %>%
ggplot(aes(x = !!sym(x_value)))+
geom_density() +
labs(x = input$x)
})
}
runGadget(ui, server)
}
h %>% gadget_plot()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,WDI,Almalki)
series_description
gadget_plot <-  function(.h) {
ui <- miniPage(
gadgetTitleBar("Density Plot"),
miniTabstripPanel(
miniTabPanel(
"Parameters",
icon = icon("sliders"),
miniContentPanel(
selectInput(
"x",
"Select X-AXIS",
series_labels,
selected = series_labels[c(1)],
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL)
)),
miniTabPanel(
"Visualize",
icon = icon("area-chart"),
miniContentPanel(plotOutput("plot", height = "100%")
))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
location <- which(series_labels == input$x)
x_value <- series_values[location]
.h %>%
ggplot(aes(x = !!sym(x_value)))+
geom_density() +
labs(x = input$x)
})
}
runGadget(ui, server)
}
h %>% gadget_plot()
knitr::opts_chunk$set(echo = FALSE, include = FALSE)
pacman::p_load(tidyverse,WDI,Almalki,shiny)
renderTable({
h %>%
select(country,year,sym(input$x),sym(input$y)) %>%
filter(!is.na(!!sym(input$y))) %>%
filter(year >= input$year[1],
year <= input$year[2])%>%
group_by(country) %>%
dplyr::summarise(`Min Year` = min(year),
`Max Year` = max(year),
`Count`    = n()) %>%
ungroup()
})
usethis::use_vignette('Amwaj')
usethis::use_readme_rmd()
